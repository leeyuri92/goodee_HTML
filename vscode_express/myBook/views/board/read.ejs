<div class="row my-5">
  <div class="col">
      <h1 class="text-center mb-5">글정보</h1>
      <div class="text-end mb-2" id="btn-group" style="display:none">
          <button class="btn btn-primary btn-sm" id="btn-update">수정</button>
          <button class="btn btn-danger btn-sm" id="btn-delete">삭제</button>
      </div>
      <div id="board"></div>
  </div>
</div>

<!--게시글정보 템플릿-->
<script id="temp" type="text/x-handlebars-template">
  <div class="card">
      <div class="card-body">
          <h5>{{ title }}</h5>
          <div>{{ body }}</div>
      </div>
      <div class="card-footer">
          Posted on 
          <span>{{ date }}</span> 
          by 
          <span>{{ email }}</span>
      </div>
  </div>
</script>
<script type="module">
  import {app} from "/javascripts/firebase.js";
  import{
    getFirestore,
    collection,
    addDoc    
  } from "https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore.js";  
  import {
    query, 
    where, 
    getDoc,
    orderBy,
    doc,
    deleteDoc 
  } from "https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore.js";
  
  const db = getFirestore(app);
  const email = localStorage.getItem("email");
  // 파라미터로 넘긴 값을 받아올 수 있나? - req.params.id;(index.js)
  const id = "<%=id%>";
  console.log(id);
  // list.ejs에서 제목에 링크를 걸었다. 클릭하면 routes/index.js이름에 따라서 호출
  // 페이지이름(pageName:"board/read.ejs")을 찾아낸다. 그런다음 index.ejs에 있는 
  // include에 있는 pageName자리에 치환된다.
  // 한 건을 가지고 올 때는 getDoc(), n건을 가지고 올 때는 getDocs() 사용
  // 반드신 await을 붙여 동기처리를 할 것
  const snapshot = await getDoc(doc(db,"board",id));
  const row = snapshot.data();
  console.log(row);
  // handlebars에 대한 링크가 없어도 SPA로 처리되고 있어서 참조할 수 있다.
  let temp = Handlebars.compile($("#temp").html());
  $("#board").html(temp(row))

  // localStorage에 담겨(언제담앗지?-로그인할때)있는 이멜 주소와
  // Firestore Database에서 꺼내온 한 개 로우가 쥐고있는 이멜주소가 같으면
  // 수정버튼과 삭제버튼 모두 표시 , 같지않으면 나타나지않음
  if(email==row.email){
    $("#btn-group").toggle();
  }
  // 두번째 주의사항 - arrow function(호이스팅이슈가 없다)과 function(호이스팅이슈)을 잘 구분해서 사용할 것
  // 게시글 수정하기 구현
  $('#btn-update').on('click',async function(){  // 비동기처리 구간 - Promise -> async or await
    // firestore database 연동이 필요없는 상황임
    // 수정페이지로 이동해서 수정할 내용을 작성한 다음에 db연동이 필요하니까 - 페이지이동만 처리할께
    location.href = "/board/update/"+id;
  })

  // 게시글 삭제하기 구현
  $('#btn-delete').on('click',async function(){  // 비동기처리 구간 - Promise -> async or await
    if(confirm(id+"번 게시글 삭제할거니?")){
      await deleteDoc(doc(db,`board/${id}`));
      // 삭제되고나면 목록페이지로 이동
      location.href="/board";  // 404발동하면 routes - index.js이거나 users.js확인
    }
  })

</script>